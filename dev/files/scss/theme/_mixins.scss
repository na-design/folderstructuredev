// ----------------------------------------------------------------------

  // Animation

// ----------------------------------------------------------------------

////
/// @author Mick O'Reilly
/// @group Netaffinity
////

/// Animate Element
///
/// @example scss - Basic Usage Sass
///    .animate -my-element {
///        @include anim(300, ease);
///    }
///
/// @example scss - Basic Usage CSS Output
///    ..animate -my-element {
///        margin-left: auto;
///        margin-right: auto;
///    }
@mixin anim($speed, $ease) {
	-webkit-transition: $speed $ease;
	-moz-transition:  $speed $ease;
	-o-transition: $speed $ease;
	-ms-transition: $speed $ease;
	transition: $speed $ease;
}
@mixin anim-size($speed, $ease) {
	-webkit-transition:transform,-ms-transform, -webkit-transform, $speed $ease;
	-moz-transition:transform,-ms-transform, -webkit-transform, $speed $ease;
	-o-transition:transform,-ms-transform, -webkit-transform, $speed $ease;
	-ms-transition:transform,-ms-transform, -webkit-transform, $speed $ease;
	transition:transform,-ms-transform, -webkit-transform, $speed $ease;
}
/// Box Shadow
@mixin box-shadow($horizontal,$vertical,$blur,$spread,$color){
	-webkit-box-shadow: $horizontal $vertical $blur $spread $color;
	box-shadow: $horizontal $vertical $blur $spread $color;
}

/// Hover Zoom Call like @include hover-zoom(1.1,1.1)

@mixin hover-zoom($height,$width) {
		-ms-transform: scale($height,$width); /* IE 9 */
	    -webkit-transform: scale($height,$width); /* Safari */
	    transform: scale($height,$width);
}

@mixin gradient{
background: $primary-color;
background: -moz-linear-gradient(top, lighten($primary-color, 10%) 0%, $primary-color 100%);
background: -webkit-gradient(left top, left bottom, color-stop(0%, lighten($primary-color, 10%)), color-stop(100%, $primary-color));
background: -webkit-linear-gradient(top, lighten($primary-color, 10%) 0%, $primary-color 100%);
background: -o-linear-gradient(top, lighten($primary-color, 10%) 0%, $primary-color 100%);
background: -ms-linear-gradient(top, lighten($primary-color, 10%) 0%, $primary-color 100%);
background: linear-gradient(to bottom, lighten($primary-color, 10%) 0%, $primary-color 100%);
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#9a4a68', endColorstr='#62122f', GradientType=0 );
}

@mixin gradientblackwhite{
background: rgba(0,0,0,1);
background: -moz-linear-gradient(left, rgba(0,0,0,1) 0%, rgba(15,15,15,1) 51%, rgba(255,255,255,1) 51%, rgba(255,255,255,1) 71%, rgba(255,255,255,1) 100%);
background: -webkit-gradient(left top, right top, color-stop(0%, rgba(0,0,0,1)), color-stop(51%, rgba(15,15,15,1)), color-stop(51%, rgba(255,255,255,1)), color-stop(71%, rgba(255,255,255,1)), color-stop(100%, rgba(255,255,255,1)));
background: -webkit-linear-gradient(left, rgba(0,0,0,1) 0%, rgba(15,15,15,1) 51%, rgba(255,255,255,1) 51%, rgba(255,255,255,1) 71%, rgba(255,255,255,1) 100%);
background: -o-linear-gradient(left, rgba(0,0,0,1) 0%, rgba(15,15,15,1) 51%, rgba(255,255,255,1) 51%, rgba(255,255,255,1) 71%, rgba(255,255,255,1) 100%);
background: -ms-linear-gradient(left, rgba(0,0,0,1) 0%, rgba(15,15,15,1) 51%, rgba(255,255,255,1) 51%, rgba(255,255,255,1) 71%, rgba(255,255,255,1) 100%);
background: linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(15,15,15,1) 51%, rgba(255,255,255,1) 51%, rgba(255,255,255,1) 71%, rgba(255,255,255,1) 100%);
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#ffffff', GradientType=1 );
}

@mixin gradient-ver($color1,$opacity1,$color2,$opacity2) {
	background: rgba($color1,0);
	background: -moz-linear-gradient(top, rgba($color1,$opacity1) 0%, rgba($color2,$opacity2) 100%);
	background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba($color1,$opacity1)), color-stop(100%, rgba($color2,$opacity2)));
	background: -webkit-linear-gradient(top, rgba($color1,$opacity1) 0%, rgba($color2,$opacity2) 100%);
	background: -o-linear-gradient(top, rgba($color1,$opacity1) 0%, rgba($color2,$opacity2) 100%);
	background: -ms-linear-gradient(top, rgba($color1,$opacity1) 0%, rgba($color2,$opacity2) 100%);
	background: linear-gradient(to bottom, rgba($color1,$opacity1) 0%, rgba($color2,$opacity2) 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color1', endColorstr='$color2', GradientType=0 );
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin overlay($color){
	position:absolute;
	top:0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color:$color;
}


@mixin main-button($btn-color,$text-color, $color){
      font-family:$font-family-sans-headings; 
      color:$text-color;
      font-size:12px;
      padding:10px 25px;
      font-weight: light;
      background-color: $btn-color;
      display:inline-block;
      text-transform: uppercase;
      overflow:hidden;
      position:relative;
      @include anim(300ms, ease-in-out);
      &:hover{
        background-color: transparent;
        color:#fff;
      }
    &:hover{
        &:before {
        -webkit-animation: anim-angled-btn 0.6s forwards ease-in;
        animation: anim-angled-btn 0.6s forwards ease-in;
      }
    }

      &:before {
          content: '';
          position: absolute;
          left: -50%;
          width: 200%;
          height: 200%;
          background: $color;
          top: -50%;
          z-index: -1;
          @include anim(300ms, ease-in-out);
          -webkit-transform: translate3d(0, -100%, 0) rotate3d(0, 0, 1, -10deg);
          transform: translate3d(0, -100%, 0) rotate3d(0, 0, 1, -10deg);
        }

@-webkit-keyframes anim-angled-btn {
  50% {
    -webkit-transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }
  100% {
    -webkit-transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
    transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
  }
}
@keyframes anim-angled-btn {
  50% {
    -webkit-transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }
  100% {
    -webkit-transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
    transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
  }
}
}

@mixin angledhovermain($color){
    &:before{
            content: '';
            position: absolute;
            left: -87px;
            width: 200%;
            height: 200%;
            background: darken($color,10%);
            top: -180px;
            opacity:0;
            z-index: 1;
            @include anim(600ms, ease-in-out);
            -ms-transform: rotate(-37deg); /* IE 9 */
          -webkit-transform: rotate(-37deg); /* Chrome, Safari, Opera */
          transform: rotate(-37deg);
    }
    &:hover{
          &:before{
            left: 0;
            top:0;
            opacity:1;
             -ms-transform: rotate(0deg); /* IE 9 */
              -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */
              transform: rotate(0deg);
          }
        i{
            color:#fff;
              z-index: 5;
              position: relative;
          }

    }
}

@mixin angledhover{
      &:hover{
        &:before {
        -webkit-animation: anim-angled-btn 0.6s forwards ease-in;
        animation: anim-angled-btn 0.6s forwards ease-in;
      }
    }

      &:before {
          content: '';
          position: absolute;
          left: -50%;
          width: 200%;
          height: 200%;
          background: red;
          top: -50%;
          z-index: 1;
          @include anim(300ms, ease-in-out);
          -webkit-transform: translate3d(0, -100%, 0) rotate3d(0, 0, 1, -10deg);
          transform: translate3d(0, -100%, 0) rotate3d(0, 0, 1, -10deg);
        }

@-webkit-keyframes anim-angled-btn {
  50% {
    -webkit-transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }
  100% {
    -webkit-transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
    transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
  }
}
@keyframes anim-angled-btn {
  50% {
    -webkit-transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    transform: translate3d(0, -50%, 0) rotate3d(0, 0, 1, -10deg);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }
  100% {
    -webkit-transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
    transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
  }
}
}


// mixin
@mixin angle($height,$pseudo, $flip: false, $angle: 1.5deg) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 0;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: $height;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}